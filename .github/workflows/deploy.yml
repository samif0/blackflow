name: Build and Deploy with Robust Setup

on:
  push:
    branches: [ main ]
  workflow_dispatch:

env:
  DOCKER_BUILDKIT: 1
  COMPOSE_DOCKER_CLI_BUILD: 1

jobs:
  test:
    name: Test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
      
      - name: Install dependencies
        run: npm ci
      
      - name: Run tests
        run: npm test || echo "No tests available yet"

  build-and-push:
    name: Build and Push Images
    needs: test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        with:
          driver-opts: |
            image=moby/buildkit:v0.12.0
            network=host
      
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_TOKEN }}
      
      - name: Generate build metadata
        id: meta
        run: |
          echo "date=$(date +'%Y%m%d')" >> $GITHUB_OUTPUT
          echo "sha=${GITHUB_SHA::8}" >> $GITHUB_OUTPUT
      
      - name: Build and push production image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: |
            ${{ secrets.DOCKER_USERNAME }}/blackflow:prod-latest
            ${{ secrets.DOCKER_USERNAME }}/blackflow:prod-${{ steps.meta.outputs.date }}-${{ steps.meta.outputs.sha }}
          cache-from: type=registry,ref=${{ secrets.DOCKER_USERNAME }}/blackflow:buildcache
          cache-to: type=registry,ref=${{ secrets.DOCKER_USERNAME }}/blackflow:buildcache,mode=max
          build-args: |
            NODE_ENV=production
            BUILDKIT_INLINE_CACHE=1
      
      - name: Build and push staging image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: |
            ${{ secrets.DOCKER_USERNAME }}/blackflow:staging-latest
            ${{ secrets.DOCKER_USERNAME }}/blackflow:staging-${{ steps.meta.outputs.date }}-${{ steps.meta.outputs.sha }}
          cache-from: type=registry,ref=${{ secrets.DOCKER_USERNAME }}/blackflow:buildcache
          cache-to: type=registry,ref=${{ secrets.DOCKER_USERNAME }}/blackflow:buildcache,mode=max
          build-args: |
            NODE_ENV=staging
            BUILDKIT_INLINE_CACHE=1
      
      - name: Build and push auth service
        uses: docker/build-push-action@v5
        with:
          context: ./services/auth-service
          file: ./services/auth-service/Dockerfile
          push: true
          tags: |
            ${{ secrets.DOCKER_USERNAME }}/blackflow-auth:latest
            ${{ secrets.DOCKER_USERNAME }}/blackflow-auth:${{ steps.meta.outputs.date }}-${{ steps.meta.outputs.sha }}
          cache-from: type=registry,ref=${{ secrets.DOCKER_USERNAME }}/blackflow-auth:buildcache
          cache-to: type=registry,ref=${{ secrets.DOCKER_USERNAME }}/blackflow-auth:buildcache,mode=max

  deploy:
    name: Deploy with CodeDeploy
    needs: build-and-push
    runs-on: ubuntu-latest
    environment: production
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}
      - name: Bundle application
        run: zip -r deployment.zip . -x "*.git*" "node_modules/*" ".github/*" "infra/*"
      - name: Upload bundle to S3
        run: aws s3 cp deployment.zip s3://${{ secrets.CODEDEPLOY_BUCKET }}/deployment.zip
      - name: Create CodeDeploy deployment
        run: |
          aws deploy create-deployment \
            --application-name BlackflowApp \
            --deployment-group-name BlackflowDG \
            --s3-location bucket=${{ secrets.CODEDEPLOY_BUCKET }},bundleType=zip,key=deployment.zip

