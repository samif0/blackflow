version: '3'

services: 
  blackflow-prod:
    build:
      context: ./blackflow
      dockerfile: Dockerfile
      args:
        - NODE_ENV=production
    ports:
      - "3000:3000"
    environment: 
      - NODE_ENV=production
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "wget", "--spider", "-q", "http://localhost:3000/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 20s
    networks:
      - frontend

  blackflow-staging:
    build:
      context: ./blackflow
      dockerfile: Dockerfile
      args:
        - NODE_ENV=staging
    ports:
      - "3000:3000"
    environment: 
      - NODE_ENV=staging
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "wget", "--spider", "-q", "http://localhost:3000/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 20s
    networks:
      - frontend

  blackflow-dev:
    build:
      context: ./blackflow
      dockerfile: Dockerfile.dev
    ports:
      - "3000:3000"
    volumes:
      - ./blackflow:/app
      - /app/node_modules
    environment: 
      - NODE_ENV=development
    command: npm run dev
    networks:
      - frontend

  auth-service:
    build:
      context: ./auth-service
      dockerfile: Dockerfile
    expose:
      - "8080"
    networks:
      - backend
    restart: unless-stopped

  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/conf.d:/etc/nginx/conf.d:ro
      - ./nginx/ssl:/etc/nginx/ssl:ro
    depends_on:
      - blackflow-prod
      - blackflow-staging
      - auth-service
    networks:
      - frontend
      - backend

networks:
  frontend:
    driver: bridge
  backend:
    driver: bridge
